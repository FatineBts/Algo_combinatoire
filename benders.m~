function [X,YZ,Longueur]=benders(X0,YZ0,P,N,D,A,b,Aeq,beq,P)

X = X0; 
A_z = [zeros(size(A,1),1),A]
b_z = b;
disp('Aeq, Beq')
A_eqz = [zeros(size(Aeq,1),1),Aeq];
b_eqz = beq;
YZ = YZ0; 

%initialisation
k = 1; 
LB = -Inf; 
UB = +Inf; 
K = []; 
k = 0; 
stop = false; 
COL = N*(N-2) + (N-2)*(N-2); 
while(stop==false && k < 1000)
    
    %Sous-problème : on cherche x 
    fobjX=@(X)objectiveyz(YZ,X,P,N,D)
    X = patternsearch(fobjX,X,[],[]); 

    %On met à jour UB
    UB = min(UB,fobjX(X)); 
    ligne = zeros(1,1+COL);
    ligne(1) = -1; 
    
    cnt = 0
    for p=N:N*(N-2) %pour y
        for q = 1:(N-2)
            ligne() = norm(X(p:p+D)-P(q:q+D)); 
        end
    end 
    
    A_z = [A_z; ligne];
    b_z = [b_z; 0];
    
    %Sous-problème : on cherche z
    fobjZ = zeros(COL+1,1);
    fobjZ(1) = 1; 
    intcon = 2:COL+1; %elles sont toutes entières sauf la première
    lb = zeros(COL+1,1);
    ub = zeros(COL+1,1);
    ub(:) = +Inf;
 
    for p=1:N-2
        for q=1:N-2
            if(p<q)
                ub(N*(N-2)+p+q) = 1; 
            end 
        end 
    end

    XZ = intlinprog(fobjZ,intcon,A_z,b_z,A_eqz,b_eqz, lb, ub); %on a Z puis YZ
    LB = XZ(1); 

    k = k + 1;

    if(LB >=UB) 
        stop = true;       
    else 
        YZ = XZ(2:end); 
    end
        
end

%Pour le plot
Longueur = XZ(1); 

end 